# Ultralytics YOLO ðŸš€, AGPL-3.0 license
# RT-DETR-l object detection model with P3-P5 outputs. For details see https://docs.ultralytics.com/models/rtdetr

# Parameters
nc: 6  # number of classes
scales: # model compound scaling constants, i.e. 'model=yolov8n-cls.yaml' will call yolov8-cls.yaml with scale 'n'
  # [depth, width, max_channels]
  l: [1.00, 1.00, 1024]

backbone:
  # [from, repeats, module, args]
  - [-1, 1, ConvNormLayer, [32, 3, 2, 1, 'relu']] # 0-P1
  - [-1, 1, ConvNormLayer, [32, 3, 1, 1, 'relu']] # 1
  - [-1, 1, ConvNormLayer, [64, 3, 1, 1, 'relu']] # 2
  - [-1, 1, nn.MaxPool2d, [3, 2, 1]] # 3-P2


  - [-1, 2, Blocks, [64,  BasicBlock, 2, False]] # 4
  - [-1, 1, iRMB, [64]]                          # 5
  - [-1, 2, Blocks, [128, BasicBlock, 3, False]] # 6-P3
  - [-1, 1, iRMB, [128]]                         # 7
  - [-1, 2, Blocks, [256, BasicBlock, 4, False]] # 8-P4
  - [-1, 1, iRMB, [256]]                         # 9
  - [-1, 2, Blocks, [512, BasicBlock, 5, False]] # 10-P5
  - [-1, 1, iRMB, [512]]                         # 11

head:
  - [-1, 1, Conv, [256, 1, 1, None, 1, 1, False]]  # 12 input_proj.2
  - [-1, 1, AIFI, [1024, 8]]
  - [-1, 1, Conv, [256, 1, 1]]  # 14, Y5, lateral_convs.0

  - [5, 1, Conv, [64, 3, 2]]   # 15 downsample backbone P3
  - [9, 1, Dy_Sample, []]  # 16
  - [[15, 7, 16], 1, Concat, [1]] # 17
  - [-1, 1, Conv, [64, 1,1]]   # 18

  - [7, 1, Conv, [128, 3, 2]]   # 19 downsample backbone P3
  - [14, 1, Dy_Sample, []]  # 20
  - [[19, 9, 20], 1, Concat, [1]] # 21
  - [-1, 1, Conv, [128, 1,1]]   # 22

  - [[18, 22], 1, ASFF2, [64, 0]]      # 23
  - [[18, 22], 1, ASFF2, [128, 1]]     # 24
  - [-2, 1, RepC3, [64, 0.5]]          # 25
  - [-2, 1, RepC3, [128, 0.5]]         # 26

  - [[25, 26, 14], 1, ASFF3, [64, 0]]  # 27
  - [[25, 26, 14], 1, ASFF3, [128, 1]] # 28
  - [[25, 26, 14], 1, ASFF3, [256, 2]] # 29

  - [-3, 1, RepC3, [128, 0.5]]         # 30
  - [-3, 1, RepC3, [256, 0.5]]         # 31
  - [-3, 1, RepC3, [512, 0.5]]         # 32

  - [[30, 31, 32], 1, RTDETRDecoder, [nc, 256, 300, 4, 8, 3]]  # Detect(P3, P4, P5)