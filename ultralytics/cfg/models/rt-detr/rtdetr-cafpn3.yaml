# Ultralytics YOLO ðŸš€, AGPL-3.0 license
# RT-DETR-l object detection model with P3-P5 outputs. For details see https://docs.ultralytics.com/models/rtdetr

# Parameters
nc: 6  # number of classes
scales: # model compound scaling constants, i.e. 'model=yolov8n-cls.yaml' will call yolov8-cls.yaml with scale 'n'
  # [depth, width, max_channels]
  l: [1.00, 1.00, 1024]

backbone:
  # [from, repeats, module, args]
  - [-1, 1, HGStem, [32, 48]]  # 0-P2/4
  - [-1, 6, HGBlock, [48, 128, 3]]  # stage 1*

  - [-1, 1, DWConv, [128, 3, 2, 1, False]]  # 2-P3/8
  - [-1, 6, HGBlock, [96, 512, 3]]   # 3 stage 2*

  - [-1, 1, DWConv, [512, 3, 2, 1, False]]  # 4-P4/16
  - [-1, 6, HGBlock, [192, 1024, 5, True, False]]  # 5 cm, c2, k, light, shortcut
  - [-1, 6, HGBlock, [192, 1024, 5, True, True]]   # 6
  - [-1, 6, HGBlock, [192, 1024, 5, True, True]]   # 7 stage 3*

  - [-1, 1, DWConv, [1024, 3, 2, 1, False]]  # 8-P5/32
  - [-1, 6, HGBlock, [384, 2048, 5, True, False]]  # 9 stage 4*

head:
  - [-1, 1, Conv, [256, 1, 1, None, 1, 1, False]]  # 10 input_proj.2
  - [-1, 1, AIFI, [1024, 8]]     # 11
  - [-1, 1, Conv, [256, 1, 1]]   # 12, Y5, lateral_convs.0

  - [1, 1, MV2Block, [64, 2, 2]]    # 13 80
  - [3, 1, Conv, [64, 1, 1]]        # 14 80
  - [7, 1, CARAFE, [64,3,2]]        # 15 80
  - [[13, 14, 15], 1, BiFPN_Add3, [64, 64]]  # 16
  - [-1, 1, iRMB, [64]]             # 17

  - [3, 1, MV2Block, [128, 2, 2]]    # 18 80
  - [7, 1, Conv, [128, 1, 1]]        # 19 80
  - [12, 1, CARAFE, [128,3,2]]       # 20 80
  - [[18, 19, 20], 1, BiFPN_Add3, [128, 128]]  # 21
  - [-1, 1, iRMB, [128]]             # 22

  - [[17, 22], 1, ASFF2, [64, 0]]   # 23
  - [[17, 22], 1, ASFF2, [128, 1]]  # 24
  - [-2, 1, RepC3_MSBlock, [64]]            # 25
  - [-2, 1, RepC3_MSBlock, [128]]           # 26

  - [[25, 26, 12], 1, ASFF3, [64, 0]]   # 27
  - [[25, 26, 12], 1, ASFF3, [128, 1]]  # 28
  - [[25, 26, 12], 1, ASFF3, [256, 2]]  # 29

  - [-3, 1, RepC3_MSBlock, [128]]      # 30
  - [-3, 1, RepC3_MSBlock, [256]]      # 31
  - [-3, 1, RepC3_MSBlock, [512]]      # 32

  - [[30, 31, 32], 1, RTDETRDecoder, [nc]]  # Detect(P3, P4, P5)  # Detect(P3, P4, P5)